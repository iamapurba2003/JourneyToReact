[{"/home/iamapurba2003/Documents/VCfiles/iamapurba2003/React-Tutorials/src/index.js":"1","/home/iamapurba2003/Documents/VCfiles/iamapurba2003/React-Tutorials/src/App.jsx":"2","/home/iamapurba2003/Documents/VCfiles/iamapurba2003/React-Tutorials/src/components/SimpleInput.jsx":"3","/home/iamapurba2003/Documents/VCfiles/iamapurba2003/React-Tutorials/src/hooks/use-input.jsx":"4","/home/iamapurba2003/Documents/VCfiles/iamapurba2003/React-Tutorials/src/components/BasicForm.jsx":"5"},{"size":142,"mtime":1616595887000,"results":"6","hashOfConfig":"7"},{"size":162,"mtime":1643392481586,"results":"8","hashOfConfig":"7"},{"size":2598,"mtime":1643392364972,"results":"9","hashOfConfig":"7"},{"size":750,"mtime":1643391818816,"results":"10","hashOfConfig":"7"},{"size":3615,"mtime":1643394037365,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"vrvwmd",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/iamapurba2003/Documents/VCfiles/iamapurba2003/React-Tutorials/src/index.js",[],["24","25"],"/home/iamapurba2003/Documents/VCfiles/iamapurba2003/React-Tutorials/src/App.jsx",[],"/home/iamapurba2003/Documents/VCfiles/iamapurba2003/React-Tutorials/src/components/SimpleInput.jsx",["26"],"import { useState } from \"react\";\n\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n    const {\n        value: enteredName,\n        isValid: enteredNameIsValid,\n        hasError: nameInputHasError,\n        valueChangeHandler: nameChangedHandler,\n        inputBlurHandler: nameBlurHandler,\n        reset: resetNameInput,\n    } = useInput((value) => value.trim() !== \"\");\n\n    const {\n        value: enteredEmail,\n        isValid: enteredEmailIsValid,\n        hasError: emailInputHasError,\n        valueChangeHandler: emailChangeHandler,\n        inputBlurHandler: emailBlurHandler,\n        reset: resetEmailInput,\n    } = useInput((value) => value.includes('@'));\n\n    let formIsValid = false;\n\n    if (enteredNameIsValid && enteredEmailIsValid) {\n        formIsValid = true;\n    }\n\n   \n\n    const formSubmissionHandler = (event) => {\n        event.preventDefault();\n\n        if (!enteredNameIsValid) {\n            return;\n        }\n\n        console.log(enteredName);\n\n        // nameInputRef.current.value = ''; => NOT IDEAL, DON'T MANIPULATE THE DOM\n        resetNameInput();\n        resetEmailInput();\n    };\n\n    const nameInputClasses = nameInputHasError\n        ? \"form-control invalid\"\n        : \"form-control\";\n\n    const emailInputClasses = emailInputHasError\n        ? \"form-control invalid\"\n        : \"form-control\";\n\n    return (\n        <form onSubmit={formSubmissionHandler}>\n            <div className={nameInputClasses}>\n                <label htmlFor=\"name\">Your Name</label>\n                <input\n                    type=\"text\"\n                    id=\"name\"\n                    onChange={nameChangedHandler}\n                    onBlur={nameBlurHandler}\n                    value={enteredName}\n                />\n                {nameInputHasError && (\n                    <p className=\"error-text\">Name must not be empty.</p>\n                )}\n            </div>\n            <div className={emailInputClasses}>\n                <label htmlFor=\"email\">Your E-Mail</label>\n                <input\n                    type=\"email\"\n                    id=\"email\"\n                    onChange={emailChangeHandler}\n                    onBlur={emailBlurHandler}\n                    value={enteredEmail}\n                />\n                {emailInputHasError && (\n                    <p className=\"error-text\">Please enter a valid email.</p>\n                )}\n            </div>\n            <div className=\"form-actions\">\n                <button disabled={!formIsValid}>Submit</button>\n            </div>\n        </form>\n    );\n};\n\nexport default SimpleInput;\n","/home/iamapurba2003/Documents/VCfiles/iamapurba2003/React-Tutorials/src/hooks/use-input.jsx",[],"/home/iamapurba2003/Documents/VCfiles/iamapurba2003/React-Tutorials/src/components/BasicForm.jsx",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":10,"nodeType":"33","messageId":"34","endLine":1,"endColumn":18},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]